{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","sections","className","id","src","style","height","marginRight","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","map","item","title","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAyCeA,MAvCf,SAAaC,GAAmD,IACvDC,EAAYD,EAAZC,SASP,OACE,mCACE,qBAAKC,UAAW,iDAAkDC,GAAG,UAArE,SACE,sBAAKD,UAAW,yBAAhB,UACI,oBAAGA,UAAU,eAAb,UACE,qBAAKE,IAAK,uBAAwBC,MAAO,CACvC,oBAAuB,UACvB,qBAAwB,UACxB,wBAA2B,UAC3B,uBAA0B,UAC1BC,OAAQ,OAAQC,YAAa,UANjC,sBAUA,yBAAQL,UAAU,sCAAsCM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,oBAArM,iBAEI,mBAAGX,UAAU,mBAEjB,qBAAKA,UAAU,2BAA2BC,GAAG,mBAA7C,SACI,oBAAID,UAAU,qBAAd,SACKD,EAASa,KA3BV,SAACC,GAAuC,IACjDZ,EAAaY,EAAbZ,GAAIa,EAASD,EAATC,MAEX,OAAQ,oBAAId,UAAU,WAAd,SAAyB,mBAAGA,UAAU,WAAWe,KAAM,IAAMd,EAApC,SAAyCa,qBCM/DE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK5B,SAAU,CACb,CAACE,GAAI,QAASa,MAAO,SACrB,CAACb,GAAI,WAAYa,MAAO,YACxB,CAACb,GAAI,SAAUa,MAAO,eAG1Bc,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.344f08bc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App(props: {sections: {id: string, title: string}[]}) {\n  const {sections} = props;\n\n  const liSection = (item: {id: string, title: string}) => {\n    const {id, title} = item;\n\n    return (<li className=\"nav-item\"><a className=\"nav-link\" href={\"#\" + id}>{title}</a></li>);\n  };\n    \n\n  return (\n    <>\n      <nav className={\"navbar navbar-expand-lg navbar-light fixed-top\"} id=\"mainNav\">\n        <div className={\"container px-4 px-lg-5\"}>\n            <a className=\"navbar-brand\">\n              <img src={\"/assets/img/logo.jpg\"} style={{\n                'borderTopLeftRadius': '50% 50%',\n                'borderTopRightRadius': '50% 50%',\n                'borderBottomRightRadius': '50% 50%',\n                'borderBottomLeftRadius': '50% 50%',\n                height: '50px', marginRight: '20px'}}\n              />\n              Hernan Lavrencic\n            </a>\n            <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                Menu\n                <i className=\"fas fa-bars\"></i>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ms-auto\">\n                    {sections.map(liSection)}\n                </ul>\n            </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App sections={[\n      {id: 'about', title: 'About'},\n      {id: 'projects', title: 'Projects'},\n      {id: 'signup', title: 'Signup'}]}\n      />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}